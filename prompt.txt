Tengo un proyecto llamado 'mgq-admin' en Vercel que está conectado a una base de datos en Neon Console llamada 'MGq'.

Proyecto Neon: MGq
ID del proyecto: solitary-king-14511939
PostgreSQL: versión 17
Provisionado con: k8s-neonvm (máquinas virtuales Neon en Kubernetes)
Endpoint: c-2.us-east-1.aws.neon.tech
Conexiones públicas: permitidas (no bloqueadas)
Conexiones VPC: no bloqueadas
Replicación lógica: deshabilitada
Integración con Vercel: el frontend mgq-admin corre en Vercel, consumiendo esta base de datos MGq.

Adjunto la carpeta app del proyecto
La tabla de la hoja Proveedor es app.proveedor

Quiero añadir una columna a la tabla de mi proveedores llamada prov_proveedor para diferenciarlos. 
Los datos subidos actualmente deberían rellenarse con 'TD' actualmente y debe incluirse en las opciones editables manualmente por fila


Hoja Proveedor
La hoja ‘Proveedor’ tiene una primer columna con check para habilitar/deshabilitar los artículos que mas se revisan cotidianamente, un selector manual de lo mas utilizado. La siguiente columna ‘Artículo’ almacena el nombre que utiliza el proveedor de sus productos. ‘Pres’ muestra las presentaciones ofrecidas por el proveedor y esta asociado a la columna siguiente ‘UOM’ que detalla la unidad de medida para cada presentación de articulo. Estas unidades deben poder seleccionarse manualmente entre GR, ML, UN. Como existe economía de escalas, un mismo articulo con una presentación diferente puede tener un costo diferente al esperado, por lo que siguen las columnas Costo y CostoUn. CostoUn representa el costo unitario calculado a partir de la presentación y el Costo de esa presentación para un mismo articulo y permite escoger rápidamente que cantidad conviene comprar al proveedor. La columna siguiente ‘Act’ muestra la fecha de última actualización de precios del proveedor para confiar o revisar el costo si es necesario. Luego se muestra un icono con una URL al articulo si existiese. Luego se puede descargar la descripción que ofrece el proveedor de su articulo. Por ultimo, la columna [g/mL] representa la densidad del articulo con un numero de 2 decimales que puede editarse ya que no siempre esta disponible al momento de subir un articulo. Por defecto vale 1,00 y en caso de que esto ensucie el código, podemos dejarlo fijo (no editable en la tabla) y luego lo modifico en la base de datos.
Pres, Costo y CostoUn son números enteros, sin decimales, con separador de miles ‘.’.
CostoUn debe multiplicarse por mil si esta seleccionado UOM GR o ML (No así si esta seleccionado UN)

Yo creo que deberiamos crear la tabla 'Proveedor' y almacenar allí las columnas:
"prov_favoritos": son los check de favoritos que llamamos columna 'Prov *' actualmente en la tabla de proveedores.
"prov_articulo": nombre del articulo segun el proveedor
"prov_presentacion": presentaciones ofrecidas por el proveedor como numero entero con separador de miles '.'
"prov_uom": GR, ML o UN
"prov_costo": costo ofrecido por el proveedor como numero entero con separador de miles '.'
"prov_costoun": calculo entre prov_costo y prov_presentacion segun UOM. prov_costoun debe multiplicarse por mil si el UOM seleccionado es GR o ML (No así si esta seleccionado UN)
"prov_act": fecha de ultima actualizacion de prov_costo como DD/MM/YYYY
"prov_url": URL de enlace al articulo del proveedor si existe
"prov_descripcion": descripcion del articulo por parte del proveedor si existe
"prov_densidad": densidad del articulo, numero con 2 decimales (por defecto 1,00)

Con esos nombres me parece facil de entender que es cada columna. 
Luego migramos datos de las variables que actualmente los almacenan para poder eliminarlas despues.
Luego migramos las relaciones entre las columnas ya que algunas son calculos de otras. 
